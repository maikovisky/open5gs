apiVersion: v1
kind: Service
metadata:
  name: open5gs-nrf
  namespace: open5gs
  labels:
    epc-mode: nrf
    prometheus: open5gs-monitor
spec:
  selector:
    epc-mode: nrf
  #type: LoadBalancer
  ports:
    - name: http2-open5gs-nrf-80
      protocol: TCP
      port: 80
      targetPort: 80
    # - name: http-open5gs-nrf-9100
    #   protocol: TCP
    #   port: 9100
---    
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: open5gs-nrf
  namespace: open5gs
  labels:
    epc-mode: nrf
    version: 2.7.1
    app: open5gs-nrf

spec:
  replicas: 1
  selector:
    matchLabels:
      epc-mode: nrf
  template:
    metadata: 
      labels:
        epc-mode: nrf
        version: 2.6.4
        app: open5gs-nrf
    spec:  
      nodeSelector:
        nodetype: server
        kubernetes.io/arch: amd64

      containers:
        - name: nrf
          image: maikovisky/open5gs:latest 
          #imagePullPolicy: IfNotPresent
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          securityContext:
            privileged: true
            capabilities:
              add: ["NET_ADMIN", "SYS_MODULE"]

          volumeMounts:
            - name: open5gs-nrf-config
              mountPath: /open5gs/config-map/nrf.yaml
              subPath: "nrf.yaml"
            - name: "dev-net-tun"
              mountPath: "/dev/net/tun" # Needed for VPN

          command: ["open5gs-nrfd", "-c", "/open5gs/config-map/nrf.yaml"]
          #command: ["sleep", "1d"]
      volumes:
        - name: open5gs-nrf-config
          configMap:
            name: open5gs-nrf-config

        - name: dev-net-tun
          hostPath:
            path: /dev/net/tun
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: open5gs-nrf
spec:
  host: open5gs-nrf
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
  subsets:
  - name: v1
    labels:
      version: 2.6.4