apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: open5gs-udm
  namespace: open5gs
  labels:
    epc-mode: udm
spec:
  replicas: 1
  selector:
    matchLabels:
      epc-mode: udm
  template:
    metadata:  
      labels:
        epc-mode: udm
        app: open5gs-udm
        # version: v2.6.1-26
    spec:  
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 75
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - open5gs-nrf
                topologyKey: kubernetes.io/hostname
      nodeSelector:
        nodetype: server
        kubernetes.io/arch: amd64
      containers:
        - name: udm
          image: maikovisky/open5gs:ubuntu-latest    
          imagePullPolicy: Always
          securityContext:
            privileged: true
            capabilities:
              add: ["NET_ADMIN", "SYS_MODULE"]

          volumeMounts:
            - name: open5gs-udm-config
              mountPath: /open5gs/config-map/udm.yaml
              subPath: "udm.yaml"

          command: ["open5gs-udmd", "-c", "/open5gs/config-map/udm.yaml"]
      volumes:
        - name: open5gs-udm-config
          configMap:
            name: open5gs-udm-config

---
apiVersion: v1
kind: Service
metadata:
  name: open5gs-udm
  namespace: open5gs
  labels:
    epc-mode: udm
    prometheus: open5gs-monitor
spec:
  selector:
    epc-mode: udm
  ports:
    - name: http2-open5gs-udm-80
      protocol: TCP
      port: 80
      targetPort: 80
    # - name: http-open5gs-udm-9100
    #   protocol: TCP
    #   port: 9100
    #   targetPort: 9100
