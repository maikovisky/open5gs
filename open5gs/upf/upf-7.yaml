apiVersion: v1
kind: Service
metadata:
  name: open5gs-upf-7
  namespace: open5gs
  labels:
    epc-mode: upf7
    promotheus: open5gs-monitor
spec:
  selector:
    epc-mode: upf7
  ports:
    - name: http2-open5gs-upf7-80
      protocol: TCP
      port: 80
      targetPort: 80
    - name: http-open5gs-upf7-9090
      protocol: TCP
      port: 9090
      targetPort: 9090
    - name: open5gs-upf7-udp-2152
      protocol: UDP
      port: 2152
      targetPort: 2152
    - name: open5gs-upf7-udp-8805
      protocol: UDP
      port: 8805
      targetPort: 8805
    # - name: http-open5gs-upf7-9100
    #   protocol: TCP
    #   port: 9100
    #   targetPort: 9100
---    
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: open5gs-upf-7
  namespace: open5gs
  labels:
    epc-mode: upf7
    promotheus: open5gs-monitor
spec:
  replicas: 0
  selector:
    matchLabels:
      epc-mode: upf7
  template:
    metadata:  
      labels:
        epc-mode: upf7
        app: open5gs-upf
        # version: v2.6.1-26
    spec:  
      nodeSelector:
        #kubernetes.io/arch: amd64
        #kubernetes.io/hostname: erasure
        kubernetes.io/hostname: brix-porvir-01
      containers:
        - name: upf7
          image: maikovisky/open5gs:latest  
          imagePullPolicy: IfNotPresent  
          securityContext:
            privileged: true
            capabilities:
              add: ["NET_ADMIN", "SYS_MODULE"]
          volumeMounts:
            - name: open5gs-upf7-config
              mountPath: /open5gs/config-map/upf.yaml
              subPath: "upf.yaml"

            - name: "dev-net-tun"
              mountPath: "/dev/net/tun" # Needed for VPN

           
            - name: open5gs-upf7-config
              mountPath:  /bin/entrypoint.sh
              subPath: entrypoint.sh

          #command: ["open5gs-upfd", "-c", "/open5gs/config-map/upf.yaml"]
          command: ["/bin/entrypoint.sh"]

      volumes:
        - name: open5gs-upf7-config
          configMap:
            name: open5gs-upf7-config
            defaultMode: 0777
        - name: dev-net-tun
          hostPath:
            path: /dev/net/tun

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: open5gs-upf-7
  namespace: open5gs
  labels:
    epc-mode: upf7
spec:
  selector:
    matchLabels:
      epc-mode: upf7
  endpoints:
  - interval: 5s
    port: http-open5gs-upf7-9090
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: open5gs-upf7-config
  namespace: open5gs
  labels:
    epc-mode: upf7
    release: prometheus
data:
  upf.yaml: |-
    logger:
      file: 
        path: /var/log/open5gs/upf.log
    global:
      max:
        ue: 2048  # The number of UE can be increased depending on memory size.
        peer: 128

    upf:
      pfcp:
        server:
          - address: 0.0.0.0
            advertise: open5gs-upf-7
        client:
          # smf:     #  UPF PFCP Client try to associate SMF PFCP Server
          #   - address: open5gs-smf2
      gtpu:
        server:
          - address: 0.0.0.0
            advertise: open5gs-upf-7
      metrics:
        server:
          - address: 0.0.0.0
            port: 9090
      session:
        - subnet: 192.168.0.0/16
          gateway: 192.168.0.1
          dnn: internet
          dev: ogstun
        - subnet: 10.47.0.0/16
          gateway: 10.47.0.1
          dnn: slice07
          dev: slice07

  entrypoint.sh: |-
    #!/bin/bash
    set -e

    echo "Executing k8s customized entrypoint.sh"
    #echo "Creating net device {{ .dev }}"
    if grep "ogstun" /proc/net/dev > /dev/null; then
      echo "[WARNING] Net device ogstun already exists!"
      ip addr add 192.168.0.1/16 dev ogstun || true
      ip link set ogstun up
    else 
      echo "[INFO] Create device ogstun!"
      ip tuntap add name ogstun mode tun
      ip addr add 192.168.0.1/16 dev ogstun || true
      ip link set ogstun up
    fi


    if grep "slice07" /proc/net/dev > /dev/null; then
      echo "[WARNING] Net device slice07 already exists!"
      ip addr add 10.47.0.1/16 dev slice07 || true
      ip link set slice07 up
    else 
      echo "[INFO] Create device slice07 !"
      ip tuntap add name slice07 mode tun
      ip addr add 10.47.0.1/16 dev slice07 || true
      ip link set slice07 up
    fi

    echo "[INFO] Config sysctl"
    sysctl -w net.ipv4.ip_forward=1
    sysctl -w net.ipv6.conf.all.forwarding=1

    echo "Enable NAT"
    iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE


    if [ ! -v NICE_VALUE ]; then
        echo "RUN WITHOUT NICE"
        open5gs-upfd -c /open5gs/config-map/upf.yaml
    else
        echo "RUN WITH NICE $NICE_VALUE"
        nice -n $NICE_VALUE open5gs-upfd -c /open5gs/config-map/upf.yaml
    fi