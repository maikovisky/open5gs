apiVersion: v1
kind: Service
metadata:
  name: open5gs-udr
  namespace: open5gs
  labels:
    epc-mode: udr
    prometheus: open5gs-monitor
spec:
  selector:
    epc-mode: udr
  ports:
    - name: http2-open5gs-udr-80
      protocol: TCP
      port: 80
      targetPort: 80
    # - name: http-open5gs-udr-9100
    #   protocol: TCP
    #   port: 9100
---    
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: open5gs-udr
  namespace: open5gs
  labels:
    epc-mode: udr

spec:
  replicas: 1
  selector:
    matchLabels:
      epc-mode: udr
  template:
    metadata:   
      labels:
        epc-mode: udr
        app: open5gs-udr
        # version: v2.6.1-26

    spec:  
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 75
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - open5gs-nrf
                topologyKey: kubernetes.io/hostname
      nodeSelector:
        nodetype: server
        kubernetes.io/arch: amd64
      containers:
        - name: udr
          image: maikovisky/open5gs:ubuntu-latest 
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
            capabilities:
              add: ["NET_ADMIN", "SYS_MODULE"]
          resources:
            requests:
              memory: "150Mi"
              cpu: "100m"
            limits:
              memory: "250Mi"
              cpu: "200m"

          volumeMounts:
            - name: open5gs-udr-config
              mountPath: /open5gs/config-map/udr.yaml
              subPath: "udr.yaml"

          command: ["open5gs-udrd", "-c", "/open5gs/config-map/udr.yaml"]

      volumes:
        - name: open5gs-udr-config
          configMap:
            name: open5gs-udr-config


