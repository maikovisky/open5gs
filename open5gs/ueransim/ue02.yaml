apiVersion: v1
kind: Service
metadata:
  name: open5gs-ue02
  namespace: open5gs
  labels:
    epc-mode: ue02
spec:
  selector:
    epc-mode: ue02
  ports:
    - name: http2-open5gs-ue02-80
      protocol: TCP
      port: 80
    - name: open5gs-ue02-tcp-3000
      protocol: TCP
      port: 3000
    - name: http2-open5gs-ue02-9100
      protocol: TCP
      port: 9100
    - name: http2-open5gs-ue02-9427
      protocol: TCP
      port: 9427
    - name: open5gs-ue02-udp-2152
      protocol: UDP
      port: 2152
    - name: open5gs-ue02-udp-36743
      protocol: UDP
      port: 36743
    - name: open5gs-ue02-udp-4997
      protocol: UDP
      port: 4997
---    
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: open5gs-ue02
  namespace: open5gs
  labels:
    epc-mode: ue02
    monitoring: prometheus
spec:
  replicas: 0
  selector:
    matchLabels:
      epc-mode: ue02
  template:
    metadata:    
      labels:
        epc-mode: ue02
        app: ueransim-ue02
    spec:  
      nodeSelector:
        kubernetes.io/hostname: brix-porvir-03
      initContainers:
        - name: init-ue
          image: maikovisky/ueransim:3.2.6
          imagePullPolicy: IfNotPresent
          command: ["/bin/ueinit"]
          env:            
            - name: DATABASE_URL
              value: mongodb://open5gs-mongodb-svc:27017
            - name: IMSI
              value: "999700000000000"
            - name: RANDOM_SLICE
              value: "False"
            - name: SLICE
              value: "2"

          volumeMounts:
            - name: open5gs-ue-init
              mountPath: /bin/ueinit
              subPath: "ueinit"

            - name: open5gs-ue-init
              mountPath: "/bin/initUE.py"
              subPath: "initUE.py"

            - name: etc-ue-tmp
              mountPath: /etc/ueransim/tmp
      containers:      
        - name: main-ue
          image: maikovisky/ueransim:3.2.6  
          imagePullPolicy: IfNotPresent  
          securityContext:
            privileged: true
            capabilities:
              add: ["NET_ADMIN", "SYS_MODULE"]
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "nr-cli --dump | xargs -i nr-cli {} -e 'deregister remove-sim'"]
          env:            
            - name: MY_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: MCC
              value: "999"
            - name: MNC
              value: "70"
              
          volumeMounts:         
            - name: open5gs-ue-init
              mountPath: "/bin/initUE.py"
              subPath: "initUE.py"

            - name: etc-ue-tmp
              mountPath: /etc/ueransim/tmp

            - name: "dev-net-tun"
              mountPath: "/dev/net/tun" # Needed for VPN

          command: ["nr-ue", "-c", "/etc/ueransim/tmp/open5gs-ue-01.yaml"]

        - name: "telegraf"
          image: "telegraf:latest"
          imagePullPolicy: IfNotPresent  
          securityContext:
            privileged: true
            capabilities:
              add: ["NET_ADMIN", "SYS_MODULE"]
          volumeMounts:
            - name: open5gs-ue2-telegraf-config
              mountPath: /etc/telegraf

        - name: ping-testing
          image: maikovisky/ueransim:3.2.6 
          imagePullPolicy: "IfNotPresent" 
          securityContext:
            privileged: true
            capabilities:
              add: ["NET_ADMIN", "SYS_MODULE"]
          volumeMounts:
            - name: open5gs-ue2-ping-config
              mountPath: /config/config.yml
              subPath: "config.yml"
          command: [ "ping","-I", "uesimtun0", "-q", "-i", "0.01", "10.0.6.26"]
          
      volumes:
        - name: open5gs-ue2-telegraf-config
          configMap:
            name: open5gs-ue2-telegraf-config
        - name: open5gs-ue-video-hd
          configMap:
            name: open5gs-ue-video-hd
            defaultMode: 0777

        - name: open5gs-ue-init
          configMap:
            name: open5gs-ue-init
            defaultMode: 0777

        - name: open5gs-ue2-ping-config
          configMap:
            name: open5gs-ue2-ping-config


        - name: dev-net-tun
          hostPath:
            path: /dev/net/tun

        - name: etc-ue-tmp
          emptyDir: {}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: open5gs-ue2-telegraf-config
  namespace: open5gs
data:
  telegraf.conf: |+
    [[outputs.prometheus_client]]
      ## Address to listen on.
      listen = ":9100"

    # [[outputs.file]]
    #   ## Files to write to, "stdout" is a specially handled file.
    #   files = ["stdout"]

    [[inputs.ping]]
      urls = ["10.0.6.26"]
      interface = "uesimtun0"
      method = "native"
      #percentiles = [25, 50, 95, 99]
      ping_interval = 2.0
      count = 5
      timeout = 2.0

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: open5gs-ue02
  namespace: open5gs
  labels:
    epc-mode: ue02
spec:
  selector:
    matchLabels:
      epc-mode: ue02
  endpoints:
  - interval: 10s
    port: http2-open5gs-ue02-9100
  # - interval: 10s
  #   port: http2-open5gs-ue02-9427
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: open5gs-ue2-ping-config
  namespace: open5gs
  labels:
    epc-mode: ue02
data:
  config.yml: |
      targets:
        - 8.8.8.8
        - 10.0.14.85
        - 143.54.85.1

      dns:
        refresh: 2m15s
        nameserver: 1.1.1.1

      ping:
        interval: 1s
        timeout: 3s
        history-size: 42
        payload-size: 120